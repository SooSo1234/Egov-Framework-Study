/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.75
 * Generated at: 2023-08-14 00:47:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class boardWrite_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>게시판 등록 화면</title>\r\n");
      out.write("\r\n");
      out.write("<script src=\"//code.jquery.com/jquery-1.12.4.js\"></script>\r\n");
      out.write("<script src=\"/egoveTest2/script/jquery-ui.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style >\r\n");
      out.write("	\r\n");
      out.write("	body{\r\n");
      out.write("		fond-size:9pt;\r\n");
      out.write("	}\r\n");
      out.write("	button{\r\n");
      out.write("		font-size:9pt;\r\n");
      out.write("	}\r\n");
      out.write("	table{\r\n");
      out.write("		width:600px;\r\n");
      out.write("		border-collapse:collapse;\r\n");
      out.write("	}\r\n");
      out.write("	th, td{\r\n");
      out.write("		border:1px solid #cccccc;\r\n");
      out.write("		padding: 3px;\r\n");
      out.write("	}\r\n");
      out.write("	.input1{\r\n");
      out.write("		width:98%;\r\n");
      out.write("	}\r\n");
      out.write("	.textarea{\r\n");
      out.write("		width:98%;\r\n");
      out.write("		height:70px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("</style>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("	$(function(){\r\n");
      out.write("		\r\n");
      out.write("		$(\"#title\").val(\"제목입력\");\r\n");
      out.write("		\r\n");
      out.write("	});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	function fn_submit() {\r\n");
      out.write("		\r\n");
      out.write("		//jquery 방식\r\n");
      out.write("		\r\n");
      out.write("		if( $.trim($(\"#title\").val()) == \"\") {\r\n");
      out.write("			alert(\"제목을 입력해주세요!\");\r\n");
      out.write("			$(\"#title\").focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		$(\"#title\").val( $.trim($(\"#title\").val()) );\r\n");
      out.write("		\r\n");
      out.write("		if($.trim($(\"#pass\").val())==\"\"){\r\n");
      out.write("			alert(\"암호를 입력해주세요!\");\r\n");
      out.write("			$(\"#pass\").focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		$(\"#pass\").val($.trim($(\"#pass\").val()) );\r\n");
      out.write("\r\n");
      out.write("		var formData = $(\"#frm\").serialize();\r\n");
      out.write("		\r\n");
      out.write("		//비동기 전송방식\r\n");
      out.write("		$.ajax({ \r\n");
      out.write("			type:\"POST\",\r\n");
      out.write("			data:formData,\r\n");
      out.write("			url:\"boardWriteSave.do\",\r\n");
      out.write("			dataType:\"text\",\r\n");
      out.write("			success: function(data) {\r\n");
      out.write("				if(data ==\"ok\"){\r\n");
      out.write("					alert(\"저장하였습니다.\");\r\n");
      out.write("					location = \"boardList.do\";\r\n");
      out.write("				} else {\r\n");
      out.write("					alert(\"저장 실패했습니다. 다시 시도해주세요.\");\r\n");
      out.write("				}\r\n");
      out.write("			},\r\n");
      out.write("			error: function() {\r\n");
      out.write("				alert(\"오류발생\");\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		/*javascript 방식\r\n");
      out.write(" \r\n");
      out.write(" 		if(document.frm.title.value == \"\"){\r\n");
      out.write("			alert(\"제목을 입력해주세요!\");\r\n");
      out.write("			document.frm.title.focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if(document.frm.pass.value==\"\"){\r\n");
      out.write("			alert(\"암호를 입력해주세요!\");\r\n");
      out.write("			document.frm.pass.focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		} */\r\n");
      out.write("		\r\n");
      out.write("		//document.frm.submit(); 동기전송방식\r\n");
      out.write("		\r\n");
      out.write("		//비동기전송방식\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<form id=\"frm\">\r\n");
      out.write("	<table>\r\n");
      out.write("		<caption>게시판 등록</caption>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th width=\"20%\"><label for=\"title\">제목</label></th>\r\n");
      out.write("			<td width=\"80%\"><input type=\"text\" name=\"title\" id=\"title\" class=\"input1\"></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th><label for=\"pass\">암호</label></th>\r\n");
      out.write("			<td><input type=\"password\" name=\"pass\" id=\"pass\"></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th><label for=\"name\">글쓴이</label></th>\r\n");
      out.write("			<td><input type=\"text\" name=\"name\" id=\"name\"></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th><label for=\"content\">내용</label></th>\r\n");
      out.write("			<td><textarea name=\"content\" id=\"content\" class=\"textarea\"></textarea></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th colspan=\"2\">\r\n");
      out.write("				<button type=\"submit\" onclick=\"fn_submit(); return false;\">저장</button>\r\n");
      out.write("				<button type=\"reset\">취소</button>\r\n");
      out.write("			</th>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
