/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.75
 * Generated at: 2023-08-16 14:46:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class loginWrite_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/member/../include/topmenu.jsp", Long.valueOf(1692197032204L));
    _jspx_dependants.put("jar:file:/C:/Users/USER/Desktop/EgovFrame/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/egovTest2/WEB-INF/lib/standard-1.1.2.jar!/META-INF/fn.tld", Long.valueOf(1098678690000L));
    _jspx_dependants.put("jar:file:/C:/Users/USER/Desktop/EgovFrame/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/egovTest2/WEB-INF/lib/standard-1.1.2.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
    _jspx_dependants.put("/WEB-INF/lib/standard-1.1.2.jar", Long.valueOf(1691245953310L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>로그인 화면</title>\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("	<style>\r\n");
      out.write("		body{\r\n");
      out.write("			font-size:9pt;\r\n");
      out.write("			font-color:#333333;\r\n");
      out.write("			font-family:맑은 고딕;\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("		a{\r\n");
      out.write("			text-decoration:none;\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("		table{\r\n");
      out.write("			width:600px;\r\n");
      out.write("			border-collapse:collapse;\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("		th,td{\r\n");
      out.write("			border:1px solid #cccccc;\r\n");
      out.write("			padding: 3px;\r\n");
      out.write("			line-height:2;\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("		caption{\r\n");
      out.write("			font-size:15pt;\r\n");
      out.write("			font-weight:bold;\r\n");
      out.write("			margin-top:10px;\r\n");
      out.write("			padding-bottom:5px;\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.div_button{\r\n");
      out.write("			width:600px;\r\n");
      out.write("			text-align:center;\r\n");
      out.write("			margin:0 auto;\r\n");
      out.write("			margin-top:5px;\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("		body{\r\n");
      out.write("			margin:0 auto;\r\n");
      out.write("			width: 800x;\r\n");
      out.write("		}\r\n");
      out.write("		table{\r\n");
      out.write("			margin:0 auto;\r\n");
      out.write("			margin-top:10px;\r\n");
      out.write("		}\r\n");
      out.write("	</style>\r\n");
      out.write("	<script>\r\n");
      out.write("		$(function (){\r\n");
      out.write("			\r\n");
      out.write("			$(\"#btn_submit\").click(()=>{\r\n");
      out.write("				\r\n");
      out.write("				var userid = $.trim($(\"#userid\").val());\r\n");
      out.write("				var pass = $.trim($(\"#pass\").val());\r\n");
      out.write("				\r\n");
      out.write("				if(userid == \"\") {\r\n");
      out.write("					alert(\"아이디를 입력해주세요.\");\r\n");
      out.write("					$(\"#userid\").focus();\r\n");
      out.write("					return false;\r\n");
      out.write("				}\r\n");
      out.write("				if(pass == \"\") {\r\n");
      out.write("					alert(\"암호를 입력해주세요.\");\r\n");
      out.write("					$(\"#pass\").focus();\r\n");
      out.write("					return false;\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("				$.ajax({\r\n");
      out.write("					\r\n");
      out.write("					type:\"POST\",\r\n");
      out.write("					data:\"userid=\"+userid+\"&pass=\"+pass,\r\n");
      out.write("					url:\"loginWriteSub.do\",\r\n");
      out.write("					dataType:\"text\",\r\n");
      out.write("					\r\n");
      out.write("					success: function(result) {\r\n");
      out.write("						if(result == \"ok\"){\r\n");
      out.write("							alert(userid+\"님 로그인 되었습니다.\");\r\n");
      out.write("							location = \"boardList.do\";\r\n");
      out.write("						} else {\r\n");
      out.write("							alert(\"로그인 정보를 다시 확인해주세요.\");\r\n");
      out.write("						}\r\n");
      out.write("					},\r\n");
      out.write("					error: function() {\r\n");
      out.write("						alert(\"오류발생\");\r\n");
      out.write("					}\r\n");
      out.write("				});\r\n");
      out.write("			});\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("	</script>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");

	String USERID = (String) session.getAttribute("SessionUserID");

      out.write("\r\n");
      out.write("\r\n");
      out.write("	<table>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th width=\"25%\">홈</th>\r\n");
      out.write("			<th width=\"25%\"><a href=\"boardList.do\">게시판</a></th>\r\n");
      out.write("			\r\n");
      out.write("			");

				if(USERID == null) {
			
      out.write("\r\n");
      out.write("			\r\n");
      out.write("			<th width=\"25%\"><a href=\"memberWrite.do\">회원가입</a></th>\r\n");
      out.write("			<th width=\"25%\"><a href=\"loginWrite.do\">로그인</a></th>\r\n");
      out.write("			\r\n");
      out.write("			");

				} else {
			
      out.write("\r\n");
      out.write("			<th width=\"25%\"><a href=\"memberModify.do\">회원정보</a></th>\r\n");
      out.write("			<th width=\"25%\"><a href=\"logoutWrite.do\">로그아웃</a></th>\r\n");
      out.write("			");

				}
			
      out.write("\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<form name=\"frm\" id=\"frm\">\r\n");
      out.write("\r\n");
      out.write("	<table>\r\n");
      out.write("		<caption>로그인</caption>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th><label for=\"userid\">아이디</label></th>\r\n");
      out.write("			<td>\r\n");
      out.write("				<input type=\"text\" name=\"userid\" id=\"userid\" placeholder=\"아이디입력\">\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>	\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th><label for=\"pass\">암호</label></th>\r\n");
      out.write("			<td>\r\n");
      out.write("				<input type=\"password\" name=\"pass\" id=\"pass\">\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>	\r\n");
      out.write("	</table>\r\n");
      out.write("	<div class=\"div_button\">\r\n");
      out.write("		<button type=\"button\" id=\"btn_submit\" >로그인</button>\r\n");
      out.write("		<button type=\"reset\">취소</button>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("</form>		\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
