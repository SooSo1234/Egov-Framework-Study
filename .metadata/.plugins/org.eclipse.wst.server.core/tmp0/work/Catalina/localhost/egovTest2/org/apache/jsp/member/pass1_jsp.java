/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.75
 * Generated at: 2023-08-17 05:17:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class pass1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/D:/project/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/egovTest2/WEB-INF/lib/standard-1.1.2.jar!/META-INF/fn.tld", Long.valueOf(1098678690000L));
    _jspx_dependants.put("jar:file:/D:/project/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/egovTest2/WEB-INF/lib/standard-1.1.2.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
    _jspx_dependants.put("/WEB-INF/lib/standard-1.1.2.jar", Long.valueOf(1691456596816L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<link type=\"text/css\" rel=\"stylesheet\" href=\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\"/>\r\n");
      out.write("  <script src=\"https://code.jquery.com/jquery-3.6.0.js\"></script>\r\n");
      out.write("  <script src=\"https://code.jquery.com/ui/1.13.2/jquery-ui.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("var result=\"입력하세요.\";\r\n");
      out.write("\r\n");
      out.write("	$( function() {\r\n");
      out.write("		\r\n");
      out.write("		var check = false;\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		$(\"#newpass1\").change(()=>{\r\n");
      out.write("			$(\"#pass\").val(\"\");\r\n");
      out.write("			check=false;\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("		\r\n");
      out.write("		$(\"#pass\").change(()=>{\r\n");
      out.write("	    	var newpass1 = $(\"#newpass1\").val();\r\n");
      out.write("	    	var pass = $(\"#pass\").val();\r\n");
      out.write("	    	pass=$.trim(pass);	\r\n");
      out.write("	    	newpass1=$.trim(newpass1);\r\n");
      out.write("	    	\r\n");
      out.write("	    	if(pass==newpass1){\r\n");
      out.write("	    		check=true;\r\n");
      out.write("	    	} else {\r\n");
      out.write("	    		check=false;\r\n");
      out.write("	    	}\r\n");
      out.write("	    	\r\n");
      out.write("	    	if(check){\r\n");
      out.write("	    		$(\"#result\").val(\"사용가능합니다.\");\r\n");
      out.write("	    	} else {\r\n");
      out.write("	    		$(\"#result\").val(\"잘못 입력하였습니다.\");\r\n");
      out.write("	    	}\r\n");
      out.write("\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		$(\"#btn_passchange\").click(()=>{\r\n");
      out.write("			\r\n");
      out.write("	    	var pass = $(\"#pass\").val();\r\n");
      out.write("	    	var oldpass = $(\"#oldpass\").val();\r\n");
      out.write("	    	var newpass1 = $(\"#newpass1\").val();\r\n");
      out.write("	    	\r\n");
      out.write("	    	pass=$.trim(pass);	\r\n");
      out.write("	    	oldpass=$.trim(oldpass);	\r\n");
      out.write("	    	newpass1=$.trim(newpass1);	\r\n");
      out.write("	    	\r\n");
      out.write("	    	if(oldpass==\"\"){\r\n");
      out.write("	    		alert(\"기존 비밀번호를 입력해주세요.\");\r\n");
      out.write("	    		$(\"#oldpass\").focus();\r\n");
      out.write("	    		return false;\r\n");
      out.write("	    	}\r\n");
      out.write("	    	if(newpass1==\"\"){\r\n");
      out.write("	    		alert(\"새로운 비밀번호를 입력해주세요.\");\r\n");
      out.write("	    		$(\"#newpass1\").focus();\r\n");
      out.write("	    		return false;\r\n");
      out.write("	    	}\r\n");
      out.write("	    	if(newpass1==oldpass){\r\n");
      out.write("	    		alert(\"기존 비밀번호와 같습니다.\");\r\n");
      out.write("	    		$(\"#newpass1\").focus();\r\n");
      out.write("	    		return false;\r\n");
      out.write("	    	}\r\n");
      out.write("	    	\r\n");
      out.write("	    	if(check==false){\r\n");
      out.write("	    		alert(\"비밀번호 재확인을 입력해주세요.\");\r\n");
      out.write("	    		$(\"#pass\").focus();\r\n");
      out.write("	    		return false;\r\n");
      out.write("	    	}\r\n");
      out.write("\r\n");
      out.write("	    	\r\n");
      out.write("	    	$(\"#oldpass\").val(oldpass);\r\n");
      out.write("	    	$(\"#pass\").val(pass);\r\n");
      out.write("	    	$(\"#newpass1\").val(newpass1);\r\n");
      out.write("	    	\r\n");
      out.write("	    	$.ajax({\r\n");
      out.write("	    		\r\n");
      out.write("	    		type:\"POST\",\r\n");
      out.write("	    		data:\"oldpass=\"+oldpass+\"&pass=\"+pass,\r\n");
      out.write("	    		url:\"passUpdate.do\",\r\n");
      out.write("	    		dataType:\"text\",\r\n");
      out.write("	    		\r\n");
      out.write("	    		success:function(result){\r\n");
      out.write("	    			if(result==\"success\"){\r\n");
      out.write("	    				alert(\"수정완료\");\r\n");
      out.write("	    				self.close();\r\n");
      out.write("	    			} else if(result==\"notcorrect\"){\r\n");
      out.write("	    				alert(\"기존 비밀번호를 틀렸습니다.\")\r\n");
      out.write("	    			}\r\n");
      out.write("	    		},\r\n");
      out.write("	    		error:function(){\r\n");
      out.write("	    			alert(\"오류발생\");\r\n");
      out.write("	    		}\r\n");
      out.write("	    		\r\n");
      out.write("	    	});\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("	});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<body style=\"height:250px; width:450px; min-height:200px;\">\r\n");
      out.write("\r\n");
      out.write("	<table style=\"width:400px; margin-top:10%;\">\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th>\r\n");
      out.write("				<label for=\"oldpass\">기존 비밀번호: </label>\r\n");
      out.write("			</th>\r\n");
      out.write("			<td>\r\n");
      out.write("				<input type=\"password\" name=\"oldpass\" id=\"oldpass\">\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th>\r\n");
      out.write("				<label for=\"newpass1\">새로운 비밀번호: </label>\r\n");
      out.write("			</th>\r\n");
      out.write("			<td>\r\n");
      out.write("				<input type=\"password\" name=\"newpass1\" id=\"newpass1\">\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th>\r\n");
      out.write("				<label for=\"pass\">비밀번호 재확인: </label>\r\n");
      out.write("			</th>\r\n");
      out.write("			<td>\r\n");
      out.write("				<input type=\"password\" name=\"pass\" id=\"pass\"><input style=\"width:100px; border-width:0px; font-size:8pt; \" type=\"text\" id=\"result\" disabled value=\"입력하세요.\">\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th colspan=\"2\">\r\n");
      out.write("				<button type=\"button\" id=\"btn_passchange\">수정</button>\r\n");
      out.write("			</th>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f0_reused = false;
    try {
      _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f0.setParent(null);
      // /member/pass1.jsp(12,45) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f0.setValue("/include/mainstyles.css");
      int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
      if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      _jspx_th_c_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f0_reused);
    }
    return false;
  }
}
